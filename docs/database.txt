```sql
-- Tạo System Database
CREATE DATABASE system_db;

-- Kết nối tới system_db
\c system_db

-- Tạo bảng packages
CREATE TABLE packages (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    name VARCHAR(100) NOT NULL,
    description TEXT,
    max_users INTEGER NOT NULL CHECK (max_users >= 0),
    max_storage BIGINT NOT NULL CHECK (max_storage >= 0),
    price DECIMAL(10, 2) NOT NULL CHECK (price >= 0),
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);
CREATE INDEX idx_packages_name ON packages(name);

-- Tạo bảng modules
CREATE TABLE modules (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    name VARCHAR(100) NOT NULL UNIQUE,
    description TEXT,
    is_active BOOLEAN NOT NULL DEFAULT true,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);
CREATE INDEX idx_modules_name ON modules(name);

-- Tạo bảng tenants
CREATE TABLE tenants (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    name VARCHAR(255) NOT NULL,
    schema_name VARCHAR(100) NOT NULL UNIQUE CHECK (schema_name ~ '^[a-z0-9-]+$'),
    package_id UUID NOT NULL,
    status VARCHAR(20) NOT NULL DEFAULT 'active' CHECK (status IN ('active', 'suspended', 'deleted')),
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (package_id) REFERENCES packages(id) ON DELETE RESTRICT
);
CREATE INDEX idx_tenants_schema_name ON tenants(schema_name);
CREATE INDEX idx_tenants_status ON tenants(status);

-- Tạo bảng domains
CREATE TABLE domains (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    tenant_id UUID NOT NULL,
    domain_name VARCHAR(255) NOT NULL UNIQUE CHECK (domain_name ~ '^[a-zA-Z0-9-]+\.[a-zA-Z]{2,}$|^[a-z0-9-]+\.example\.com$'),
    is_default BOOLEAN NOT NULL DEFAULT false,
    status VARCHAR(20) NOT NULL DEFAULT 'pending' CHECK (status IN ('pending', 'active', 'disabled')),
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (tenant_id) REFERENCES tenants(id) ON DELETE CASCADE
);
CREATE INDEX idx_domains_domain_name ON domains(domain_name);
CREATE INDEX idx_domains_tenant_id ON domains(tenant_id);

-- Tạo bảng tenant_modules
CREATE TABLE tenant_modules (
    tenant_id UUID NOT NULL,
    module_id UUID NOT NULL,
    is_enabled BOOLEAN NOT NULL DEFAULT true,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (tenant_id, module_id),
    FOREIGN KEY (tenant_id) REFERENCES tenants(id) ON DELETE CASCADE,
    FOREIGN KEY (module_id) REFERENCES modules(id) ON DELETE CASCADE
);
CREATE INDEX idx_tenant_modules_tenant_id ON tenant_modules(tenant_id);

-- Tạo bảng system_users
CREATE TABLE system_users (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    username VARCHAR(100) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL UNIQUE,
    role VARCHAR(50) NOT NULL CHECK (role IN ('system_admin', 'system_manager')),
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);
CREATE INDEX idx_system_users_email ON system_users(email);

-- Dữ liệu mẫu
INSERT INTO packages (id, name, description, max_users, max_storage, price)
VALUES
    ('550e8400-e29b-41d4-a716-446655440000', 'Basic', 'Gói cơ bản', 10, 1000000000, 99.99),
    ('550e8400-e29b-41d4-a716-446655440001', 'Pro', 'Gói chuyên nghiệp', 50, 5000000000, 199.99);

INSERT INTO modules (id, name, description)
VALUES
    ('550e8400-e29b-41d4-a716-446655440002', 'CRM', 'Quản lý khách hàng'),
    ('550e8400-e29b-41d4-a716-446655440003', 'HRM', 'Quản lý nhân sự'),
    ('550e8400-e29b-41d4-a716-446655440004', 'Analytics', 'Phân tích dữ liệu');

INSERT INTO system_users (id, username, password, email, role)
VALUES
    ('550e8400-e29b-41d4-a716-446655440005', 'admin', '$2y$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi', 'admin@example.com', 'system_admin');

INSERT INTO tenants (id, name, schema_name, package_id)
VALUES
    ('550e8400-e29b-41d4-a716-446655440010', 'Tenant A', 'tenant1', '550e8400-e29b-41d4-a716-446655440000');

INSERT INTO domains (id, tenant_id, domain_name, is_default, status)
VALUES
    ('550e8400-e29b-41d4-a716-446655440013', '550e8400-e29b-41d4-a716-446655440010', 'tenant1.example.com', true, 'active'),
    ('550e8400-e29b-41d4-a716-446655440014', '550e8400-e29b-41d4-a716-446655440010', 'customerdomain.com', false, 'pending');

INSERT INTO tenant_modules (tenant_id, module_id, is_enabled)
VALUES
    ('550e8400-e29b-41d4-a716-446655440010', '550e8400-e29b-41d4-a716-446655440002', true),
    ('550e8400-e29b-41d4-a716-446655440010', '550e8400-e29b-41d4-a716-446655440003', true);

-- Hàm tạo schema tenant
CREATE OR REPLACE FUNCTION create_tenant_schema(tenant_schema_name VARCHAR)
RETURNS VOID AS $$
DECLARE
    schema_name VARCHAR := 'tenant_' || tenant_schema_name;
BEGIN
    EXECUTE format('CREATE SCHEMA %I', schema_name);

    EXECUTE format('
        CREATE TABLE %I.users (
            id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
            username VARCHAR(100) NOT NULL UNIQUE,
            password VARCHAR(255) NOT NULL,
            email VARCHAR(255) NOT NULL UNIQUE,
            role_id UUID NOT NULL,
            status VARCHAR(20) NOT NULL DEFAULT ''active'' CHECK (status IN (''active'', ''suspended'')),
            created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
            updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
            FOREIGN KEY (role_id) REFERENCES %I.roles(id) ON DELETE RESTRICT
        )', schema_name, schema_name);
    EXECUTE format('CREATE INDEX idx_users_email ON %I.users(email)', schema_name);

    EXECUTE format('
        CREATE TABLE %I.roles (
            id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
            name VARCHAR(100) NOT NULL,
            permissions JSONB NOT NULL,
            created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
            updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
        )', schema_name);
    EXECUTE format('CREATE INDEX idx_roles_name ON %I.roles(name)', schema_name);

    EXECUTE format('
        CREATE TABLE %I.user_data (
            id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
            user_id UUID NOT NULL,
            module_id UUID NOT NULL,
            data JSONB NOT NULL,
            created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
            updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
            FOREIGN KEY (user_id) REFERENCES %I.users(id) ON DELETE CASCADE,
            FOREIGN KEY (module_id) REFERENCES system_db.modules(id) ON DELETE RESTRICT
        )', schema_name, schema_name);
    EXECUTE format('CREATE INDEX idx_user_data_user_id ON %I.user_data(user_id)', schema_name);

    EXECUTE format('
        INSERT INTO %I.roles (id, name, permissions)
        VALUES
            (''550e8400-e29b-41d4-a716-446655440006'', ''admin'', ''{"crm": ["read", "write", "delete"], "hrm": ["read", "write"], "analytics": ["read"]}''::jsonb),
            (''550e8400-e29b-41d4-a716-446655440007'', ''manager'', ''{"crm": ["read"], "hrm": ["read"], "analytics": ["read"]}''::jsonb),
            (''550e8400-e29b-41d4-a716-446655440008'', ''staff'', ''{"crm": ["read", "write"], "hrm": ["read"]}''::jsonb),
            (''550e8400-e29b-41d4-a716-446655440009'', ''user'', ''{"crm": ["read"]}''::jsonb)
    ', schema_name);
END;
$$ LANGUAGE plpgsql;

-- Tạo schema mẫu
SELECT create_tenant_schema('tenant1');

-- Dữ liệu mẫu cho tenant1
INSERT INTO tenant_tenant1.users (id, username, password, email, role_id)
VALUES
    ('550e8400-e29b-41d4-a716-446655440011', 'tenant_admin', '$2y$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi', 'admin@tenant1.example.com', '550e8400-e29b-41d4-a716-446655440006');

INSERT INTO tenant_tenant1.user_data (id, user_id, module_id, data)
VALUES
    ('550e8400-e29b-41d4-a716-446655440012', '550e8400-e29b-41d4-a716-446655440011', '550e8400-e29b-41d4-a716-446655440002', '{"ticket_id": "T123", "status": "open"}'::jsonb);
```