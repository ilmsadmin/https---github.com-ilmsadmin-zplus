version: '3.8'

services:
  notification-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: notification-service
    restart: unless-stopped
    ports:
      - "3007:3007"    environment:
      - NODE_ENV=development
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_USERNAME=postgres
      - DATABASE_PASSWORD=postgres
      - DATABASE_NAME=system_db
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - KAFKA_BROKERS=kafka:9092
      - EMAIL_PROVIDER=smtp
      - SMTP_HOST=mailhog
      - SMTP_PORT=1025
      - SMTP_SECURE=false
      - SMTP_USER=
      - SMTP_PASSWORD=
      - EMAIL_FROM_ADDRESS=noreply@example.com
      - EMAIL_FROM_NAME=Notification Service
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - multi-tenant-network
    depends_on:
      - postgres
      - redis
      - kafka

  postgres:
    image: postgres:15
    container_name: notification-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=system_db
    ports:
      - "5433:5432"
    volumes:
      - notification-pg-data:/var/lib/postgresql/data
    networks:
      - multi-tenant-network

  redis:
    image: redis:7-alpine
    container_name: notification-redis
    restart: unless-stopped
    ports:
      - "6380:6379"
    volumes:
      - notification-redis-data:/data
    networks:
      - multi-tenant-network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: notification-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - multi-tenant-network
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: notification-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - multi-tenant-network
      
  mailhog:
    image: mailhog/mailhog
    container_name: notification-mailhog
    ports:
      - "1025:1025" # SMTP server
      - "8025:8025" # Web UI
    networks:
      - multi-tenant-network

  pgadmin:
    image: dpage/pgadmin4
    container_name: notification-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    volumes:
      - notification-pgadmin-data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - multi-tenant-network

volumes:
  notification-pg-data:
  notification-redis-data:
  notification-pgadmin-data:

networks:
  multi-tenant-network:
    driver: bridge
